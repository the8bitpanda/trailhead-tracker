global class ScheduleToCreateTrailheadChatterPosts implements Schedulable {
    global void execute(SchedulableContext SC) {
        List<String> setCompletedUsers = new List<String>();
        Set<Id> setNotCompletedUserIds = new Set<Id>();
        List<Trailhead_User__c> listUsersToUpdate = new List<Trailhead_User__c>();
        
        for(Badge_Achieved__c varBadgeAchieved : [Select Trailhead_User__c, Trailhead_User__r.Name from Badge_Achieved__c where CreatedDate = TODAY])
        {
            if(!setCompletedUsers.contains(varBadgeAchieved.Trailhead_User__r.Name))
            {                
                setCompletedUsers.add(varBadgeAchieved.Trailhead_User__r.Name);
            }            
        }
        
        for(Trailhead_User__c varTrailheadUser : [Select Id from Trailhead_User__c where Streak_Updated__c != TODAY])
        {
            setNotCompletedUserIds.add(varTrailheadUser.Id);
            
        }
        
        if(!setCompletedUsers.isEmpty() && Trailhead_Tracker__c.getInstance().Create_Chatter_Post__c)
        {
            setCompletedUsers.sort();
            FeedItem post = new FeedItem();
            post.ParentId = Trailhead_Tracker__c.getInstance().Trailblazers_Group_Id__c;
            String dateToday = DateTime.newInstance(date.today().year(),date.today().month(),date.today().day()).format('d MMMM');
            post.Body = 'Congratulations ' + String.join(setCompletedUsers, ', ') + ' on completing '+ dateToday +'\'s challenge!\n#OneStepAtATime\n\n[This post was auto-generated by Trailhead Tracker]';
            post.CreatedById = Trailhead_Tracker__c.getInstance().Chatter_Post_User_Id__c; 
            insert post;
        }
        
        if(!setNotCompletedUserIds.isEmpty())
        {
            for(Id userId : setNotCompletedUserIds)
            {
                listUsersToUpdate.add(new Trailhead_User__c(Id = userId, Streak__c = 0));
            }
        }
        
        if(!listUsersToUpdate.isEmpty())
        {
            update listUsersToUpdate;
        }
    }
}